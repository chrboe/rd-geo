#! /usr/bin/env python

from pykml import parser


def convert_border(jsvar, filename, invert):
    print('var {} = [['.format(jsvar))
    if invert:
        print('[90, -180], [90, 180], [-90, 180], [-90, -180]')
        print('], [')
    with open(filename) as f:
        doc = parser.parse(f)
        for pm in doc.iterfind('.//{http://www.opengis.net/kml/2.2}Placemark'):
            coords = str(pm.Polygon[0].outerBoundaryIs.LinearRing.coordinates)
            for coord in coords.split():
                lonlat = coord.split(',')
                lat = lonlat[1]
                lon = lonlat[0]
                print('[' + lat + ', ' + lon + '],')
    print(']];')


def convert_points(jsvar, filename):
    print('var {} = ['.format(jsvar))
    with open(filename) as f:
        doc = parser.parse(f)
        for pm in doc.iterfind('.//{http://www.opengis.net/kml/2.2}Placemark'):
            name = pm.name
            organization = pm.ExtendedData.Data.value
            coords = str(pm.Point.coordinates).strip()
            split = coords.split(',')
            lon = split[0]
            lat = split[1]
            print('{{"coords": [{}, {}], "name": "{}", "organization": "{}"}},'.format(lat, lon, name, organization))
    print('];')


print('// generated by gen_coords.py')
convert_border('noeBorderPoly', 'kml/noe-border.kml', True)
convert_border('vieBorderPoly', 'kml/vie-border.kml', False)
convert_points('departments', 'kml/standorte.kml')
